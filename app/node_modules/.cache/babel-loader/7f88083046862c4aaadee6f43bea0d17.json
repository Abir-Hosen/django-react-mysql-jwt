{"ast":null,"code":"import * as types from './types'; // export const registerUser = () => ({\n//   type: types.GET_SERVER_PROVIDER,\n//   payload: {\n//     path: `/serverproviders/all/details`,\n//     method: 'GET',\n//   },\n//   meta: {\n//     api: true,\n//     successMessage: 'Server provider fetch successfully',\n//     errorMessage: \"Server  provider failed to fetch\",\n//   },\n// });\n\nexport const saveAuthUser = payload => ({\n  type: types.SAVE_USER_INFO,\n  payload: {\n    path: `/auth/register/`,\n    method: 'POST',\n    data: payload\n  },\n  meta: {\n    api: true,\n    successMessage: 'User registered successfully',\n    errorMessage: \"User registration failed\"\n  }\n});\nexport const clearState = () => ({\n  type: 'RESET_APP',\n  meta: {\n    api: false,\n    successMessage: 'Successfully State Clear',\n    errorMessage: \"State not clear\"\n  }\n});","map":{"version":3,"sources":["/home/abir/Documents/personal/djiango-react-mysql-jwt/app/src/common/redux/resources/authResources/action.js"],"names":["types","saveAuthUser","payload","type","SAVE_USER_INFO","path","method","data","meta","api","successMessage","errorMessage","clearState"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,MAAMC,YAAY,GAAIC,OAAD,KAAc;AACxCC,EAAAA,IAAI,EAAEH,KAAK,CAACI,cAD4B;AAExCF,EAAAA,OAAO,EAAE;AACPG,IAAAA,IAAI,EAAG,iBADA;AAEPC,IAAAA,MAAM,EAAE,MAFD;AAGPC,IAAAA,IAAI,EAAEL;AAHC,GAF+B;AAOxCM,EAAAA,IAAI,EAAE;AACJC,IAAAA,GAAG,EAAE,IADD;AAEJC,IAAAA,cAAc,EAAE,8BAFZ;AAGJC,IAAAA,YAAY,EAAE;AAHV;AAPkC,CAAd,CAArB;AAeP,OAAO,MAAMC,UAAU,GAAG,OAAO;AAC/BT,EAAAA,IAAI,EAAE,WADyB;AAE/BK,EAAAA,IAAI,EAAE;AACJC,IAAAA,GAAG,EAAE,KADD;AAEJC,IAAAA,cAAc,EAAE,0BAFZ;AAGJC,IAAAA,YAAY,EAAE;AAHV;AAFyB,CAAP,CAAnB","sourcesContent":["import * as types from './types';\n\n\n// export const registerUser = () => ({\n//   type: types.GET_SERVER_PROVIDER,\n//   payload: {\n//     path: `/serverproviders/all/details`,\n//     method: 'GET',\n//   },\n//   meta: {\n//     api: true,\n//     successMessage: 'Server provider fetch successfully',\n//     errorMessage: \"Server  provider failed to fetch\",\n//   },\n// });\n\n\nexport const saveAuthUser = (payload) => ({\n  type: types.SAVE_USER_INFO,\n  payload: {\n    path: `/auth/register/`,\n    method: 'POST',\n    data: payload\n  },\n  meta: {\n    api: true,\n    successMessage: 'User registered successfully',\n    errorMessage: \"User registration failed\",\n  },\n});\n\n\nexport const clearState = () => ({\n  type: 'RESET_APP',\n  meta: {\n    api: false,\n    successMessage: 'Successfully State Clear',\n    errorMessage: \"State not clear\",\n  },\n});"]},"metadata":{},"sourceType":"module"}