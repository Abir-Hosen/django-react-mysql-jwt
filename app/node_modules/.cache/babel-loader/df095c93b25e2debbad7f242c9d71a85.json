{"ast":null,"code":"import * as types from './types';\nexport const checkRefresh = payload => ({\n  type: types.SAVE_USER_INFO,\n  payload: {\n    path: `/auth/refresh/`,\n    method: 'POST',\n    data: payload\n  },\n  meta: {\n    api: true,\n    successMessage: 'User registered successfully',\n    errorMessage: \"User registration failed\"\n  }\n});\nexport const saveAuthUser = payload => ({\n  type: types.SAVE_USER_INFO,\n  payload: {\n    path: `/auth/register/`,\n    method: 'POST',\n    data: payload\n  },\n  meta: {\n    api: true,\n    successMessage: 'User registered successfully',\n    errorMessage: \"User registration failed\"\n  }\n});\nexport const userLogin = payload => ({\n  type: types.USER_LOGIN,\n  payload: {\n    path: `/auth/login/`,\n    method: 'POST',\n    data: payload\n  },\n  meta: {\n    api: true,\n    successMessage: 'User login successfully',\n    errorMessage: \"User login failed\"\n  }\n});\nexport const setMsg = payload => ({\n  type: types.SET_MSG,\n  payload: payload,\n  meta: {\n    api: false,\n    successMessage: 'mesage State changed',\n    errorMessage: \"message not changed\"\n  }\n});\nexport const clearState = () => ({\n  type: 'RESET_APP',\n  meta: {\n    api: false,\n    successMessage: 'Successfully State Clear',\n    errorMessage: \"State not clear\"\n  }\n});","map":{"version":3,"sources":["/home/abir/Documents/personal/djiango-react-mysql-jwt/app/src/common/redux/resources/authResources/action.js"],"names":["types","checkRefresh","payload","type","SAVE_USER_INFO","path","method","data","meta","api","successMessage","errorMessage","saveAuthUser","userLogin","USER_LOGIN","setMsg","SET_MSG","clearState"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AAEA,OAAO,MAAMC,YAAY,GAAIC,OAAD,KAAc;AACxCC,EAAAA,IAAI,EAAEH,KAAK,CAACI,cAD4B;AAExCF,EAAAA,OAAO,EAAE;AACPG,IAAAA,IAAI,EAAG,gBADA;AAEPC,IAAAA,MAAM,EAAE,MAFD;AAGPC,IAAAA,IAAI,EAAEL;AAHC,GAF+B;AAOxCM,EAAAA,IAAI,EAAE;AACJC,IAAAA,GAAG,EAAE,IADD;AAEJC,IAAAA,cAAc,EAAE,8BAFZ;AAGJC,IAAAA,YAAY,EAAE;AAHV;AAPkC,CAAd,CAArB;AAcP,OAAO,MAAMC,YAAY,GAAIV,OAAD,KAAc;AACxCC,EAAAA,IAAI,EAAEH,KAAK,CAACI,cAD4B;AAExCF,EAAAA,OAAO,EAAE;AACPG,IAAAA,IAAI,EAAG,iBADA;AAEPC,IAAAA,MAAM,EAAE,MAFD;AAGPC,IAAAA,IAAI,EAAEL;AAHC,GAF+B;AAOxCM,EAAAA,IAAI,EAAE;AACJC,IAAAA,GAAG,EAAE,IADD;AAEJC,IAAAA,cAAc,EAAE,8BAFZ;AAGJC,IAAAA,YAAY,EAAE;AAHV;AAPkC,CAAd,CAArB;AAeP,OAAO,MAAME,SAAS,GAAIX,OAAD,KAAc;AACrCC,EAAAA,IAAI,EAAEH,KAAK,CAACc,UADyB;AAErCZ,EAAAA,OAAO,EAAE;AACPG,IAAAA,IAAI,EAAG,cADA;AAEPC,IAAAA,MAAM,EAAE,MAFD;AAGPC,IAAAA,IAAI,EAAEL;AAHC,GAF4B;AAOrCM,EAAAA,IAAI,EAAE;AACJC,IAAAA,GAAG,EAAE,IADD;AAEJC,IAAAA,cAAc,EAAE,yBAFZ;AAGJC,IAAAA,YAAY,EAAE;AAHV;AAP+B,CAAd,CAAlB;AAcP,OAAO,MAAMI,MAAM,GAAIb,OAAD,KAAc;AAClCC,EAAAA,IAAI,EAAEH,KAAK,CAACgB,OADsB;AAElCd,EAAAA,OAAO,EAAGA,OAFwB;AAGlCM,EAAAA,IAAI,EAAE;AACJC,IAAAA,GAAG,EAAE,KADD;AAEJC,IAAAA,cAAc,EAAE,sBAFZ;AAGJC,IAAAA,YAAY,EAAE;AAHV;AAH4B,CAAd,CAAf;AAWP,OAAO,MAAMM,UAAU,GAAG,OAAO;AAC/Bd,EAAAA,IAAI,EAAE,WADyB;AAE/BK,EAAAA,IAAI,EAAE;AACJC,IAAAA,GAAG,EAAE,KADD;AAEJC,IAAAA,cAAc,EAAE,0BAFZ;AAGJC,IAAAA,YAAY,EAAE;AAHV;AAFyB,CAAP,CAAnB","sourcesContent":["import * as types from './types';\n\nexport const checkRefresh = (payload) => ({\n  type: types.SAVE_USER_INFO,\n  payload: {\n    path: `/auth/refresh/`,\n    method: 'POST',\n    data: payload\n  },\n  meta: {\n    api: true,\n    successMessage: 'User registered successfully',\n    errorMessage: \"User registration failed\",\n  },\n});\n\nexport const saveAuthUser = (payload) => ({\n  type: types.SAVE_USER_INFO,\n  payload: {\n    path: `/auth/register/`,\n    method: 'POST',\n    data: payload\n  },\n  meta: {\n    api: true,\n    successMessage: 'User registered successfully',\n    errorMessage: \"User registration failed\",\n  },\n});\n\n\nexport const userLogin = (payload) => ({\n  type: types.USER_LOGIN,\n  payload: {\n    path: `/auth/login/`,\n    method: 'POST',\n    data: payload\n  },\n  meta: {\n    api: true,\n    successMessage: 'User login successfully',\n    errorMessage: \"User login failed\",\n  },\n});\n\nexport const setMsg = (payload) => ({\n  type: types.SET_MSG,\n  payload : payload,\n  meta: {\n    api: false,\n    successMessage: 'mesage State changed',\n    errorMessage: \"message not changed\",\n  },\n});\n\n\nexport const clearState = () => ({\n  type: 'RESET_APP',\n  meta: {\n    api: false,\n    successMessage: 'Successfully State Clear',\n    errorMessage: \"State not clear\",\n  },\n});"]},"metadata":{},"sourceType":"module"}