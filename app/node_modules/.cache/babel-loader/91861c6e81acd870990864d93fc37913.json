{"ast":null,"code":"import produce from 'immer';\nimport * as types from './types';\nconst authInfoState = {\n  msg: ''\n};\nexport const authInfo = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : authInfoState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload,\n    meta,\n    errorMessage\n  } = action;\n  return produce(state, draft => {\n    switch (type) {\n      case types.SAVE_USER_INFO:\n        console.log('saving user'); // draft.userInfo = payload.idTokenParsed\n        // draft.userInfo.token = payload.token\n\n        break;\n\n      case types.SAVE_USER_INFO_SUCCESS:\n        draft.msg = meta.successMessage;\n        break;\n\n      case types.SAVE_USER_INFO_FAILED:\n        draft.msg = meta.errorMessage;\n        break;\n\n      case types.SET_MSG:\n        draft.msg = '';\n        break;\n\n      default:\n        return state;\n    }\n  });\n};","map":{"version":3,"sources":["/home/abir/Documents/personal/djiango-react-mysql-jwt/app/src/common/redux/resources/authResources/reducer.js"],"names":["produce","types","authInfoState","msg","authInfo","state","action","type","payload","meta","errorMessage","draft","SAVE_USER_INFO","console","log","SAVE_USER_INFO_SUCCESS","successMessage","SAVE_USER_INFO_FAILED","SET_MSG"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE;AADa,CAAtB;AAIA,OAAO,MAAMC,QAAQ,GAAG,YAAmC;AAAA,MAAlCC,KAAkC,uEAA1BH,aAA0B;AAAA,MAAXI,MAAW;AACvD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,IAAjB;AAAuBC,IAAAA;AAAvB,MAAwCJ,MAA9C;AACA,SAAON,OAAO,CAACK,KAAD,EAASM,KAAD,IAAW;AAC7B,YAAQJ,IAAR;AACI,WAAKN,KAAK,CAACW,cAAX;AACIC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EADJ,CAEI;AACA;;AACA;;AACJ,WAAKb,KAAK,CAACc,sBAAX;AACIJ,QAAAA,KAAK,CAACR,GAAN,GAAYM,IAAI,CAACO,cAAjB;AACA;;AACJ,WAAKf,KAAK,CAACgB,qBAAX;AACIN,QAAAA,KAAK,CAACR,GAAN,GAAYM,IAAI,CAACC,YAAjB;AACA;;AAEJ,WAAKT,KAAK,CAACiB,OAAX;AACIP,QAAAA,KAAK,CAACR,GAAN,GAAY,EAAZ;AACA;;AACJ;AACI,eAAOE,KAAP;AAjBR;AAmBH,GApBa,CAAd;AAqBH,CAvBM","sourcesContent":["import produce from 'immer';\nimport * as types from './types';\n\nconst authInfoState = {\n    msg: '',\n}\n\nexport const authInfo = (state = authInfoState, action) => {\n    const { type, payload, meta, errorMessage } = action;\n    return produce(state, (draft) => {\n        switch (type) {\n            case types.SAVE_USER_INFO:\n                console.log('saving user')\n                // draft.userInfo = payload.idTokenParsed\n                // draft.userInfo.token = payload.token\n                break;\n            case types.SAVE_USER_INFO_SUCCESS:\n                draft.msg = meta.successMessage\n                break;\n            case types.SAVE_USER_INFO_FAILED:\n                draft.msg = meta.errorMessage\n                break;\n\n            case types.SET_MSG:\n                draft.msg = ''\n                break;\n            default:\n                return state;\n        }\n    });\n}"]},"metadata":{},"sourceType":"module"}