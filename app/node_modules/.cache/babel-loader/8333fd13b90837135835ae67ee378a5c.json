{"ast":null,"code":"import axios from 'axios';\nimport store from '../index';\nimport { apiBaseURL } from '../../../settings';\nexport const apiMiddleware = () => next => action => {\n  next(action);\n  const baseUrl = `${apiBaseURL.v1}`;\n  const {\n    api,\n    file,\n    successMessage,\n    errorMessage,\n    reducerData\n  } = action.meta || {};\n  const {\n    path,\n    mockPath,\n    method = 'GET',\n    data\n  } = action.payload || {};\n\n  if (!api) {\n    return;\n  }\n\n  if (api && !path) {\n    throw new Error(`'path' not specified for api action ${action.type}`);\n  }\n\n  const url = mockPath ? mockPath : baseUrl + path;\n  const header = {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  };\n  let requestObject;\n\n  if (file) {\n    requestObject = {\n      method,\n      url,\n      data,\n      header\n    };\n  } else {\n    requestObject = {\n      method,\n      url,\n      data\n    };\n  } // axios.defaults.headers.common['Authorization'] = `Bearer ${store.getState().authInfo.userInfo.token}`\n\n\n  return axios(requestObject).then(res => {\n    alert(res);\n    next({\n      type: `${action.type}_SUCCESS`,\n      payload: res.data,\n      meta: action.meta\n    }); // successMessage && console.log(successMessage);\n  }).catch(error => {\n    // console.log(error.response.data)\n    // let errorMsg = ''\n    // if (error.response) {\n    //     errorMsg = 'Something went wrong'\n    // }\n    // else if (errorMessage) {\n    //     errorMsg = errorMessage;\n    // } else {\n    //     errorMsg = 'Something went wrong'\n    // }\n    next({\n      type: `${action.type}_FAILED`,\n      meta: action.meta // errorMessage: error.response.data\n\n    });\n  });\n};","map":{"version":3,"sources":["/home/abir/Documents/personal/djiango-react-mysql-jwt/app/src/common/redux/middlewares/apiMiddleware.js"],"names":["axios","store","apiBaseURL","apiMiddleware","next","action","baseUrl","v1","api","file","successMessage","errorMessage","reducerData","meta","path","mockPath","method","data","payload","Error","type","url","header","headers","requestObject","then","res","alert","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAOC,IAAD,IAAWC,MAAD,IAAY;AAErDD,EAAAA,IAAI,CAACC,MAAD,CAAJ;AACA,QAAMC,OAAO,GAAI,GAAEJ,UAAU,CAACK,EAAG,EAAjC;AAEA,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,IAAP;AAAaC,IAAAA,cAAb;AAA6BC,IAAAA,YAA7B;AAA2CC,IAAAA;AAA3C,MAA2DP,MAAM,CAACQ,IAAP,IAAe,EAAhF;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,MAAM,GAAG,KAA3B;AAAkCC,IAAAA;AAAlC,MAA2CZ,MAAM,CAACa,OAAP,IAAkB,EAAnE;;AAEA,MAAI,CAACV,GAAL,EAAU;AACN;AACH;;AAED,MAAIA,GAAG,IAAI,CAACM,IAAZ,EAAkB;AACd,UAAM,IAAIK,KAAJ,CAAW,uCAAsCd,MAAM,CAACe,IAAK,EAA7D,CAAN;AACH;;AACD,QAAMC,GAAG,GAAGN,QAAQ,GAAGA,QAAH,GAAcT,OAAO,GAAGQ,IAA5C;AAEA,QAAMQ,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AADE,GAAf;AAIA,MAAIC,aAAJ;;AAEA,MAAIf,IAAJ,EAAU;AACNe,IAAAA,aAAa,GAAG;AACZR,MAAAA,MADY;AAEZK,MAAAA,GAFY;AAGZJ,MAAAA,IAHY;AAIZK,MAAAA;AAJY,KAAhB;AAMH,GAPD,MAOO;AACHE,IAAAA,aAAa,GAAG;AACZR,MAAAA,MADY;AAEZK,MAAAA,GAFY;AAGZJ,MAAAA;AAHY,KAAhB;AAKH,GApCoD,CAsCrD;;;AAEA,SAAOjB,KAAK,CAACwB,aAAD,CAAL,CACFC,IADE,CACIC,GAAD,IAAS;AACXC,IAAAA,KAAK,CAACD,GAAD,CAAL;AACAtB,IAAAA,IAAI,CAAC;AACDgB,MAAAA,IAAI,EAAG,GAAEf,MAAM,CAACe,IAAK,UADpB;AAEDF,MAAAA,OAAO,EAAEQ,GAAG,CAACT,IAFZ;AAGDJ,MAAAA,IAAI,EAAER,MAAM,CAACQ;AAHZ,KAAD,CAAJ,CAFW,CAOX;AACH,GATE,EAUFe,KAVE,CAUKC,KAAD,IAAW;AACd;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAzB,IAAAA,IAAI,CAAC;AACDgB,MAAAA,IAAI,EAAG,GAAEf,MAAM,CAACe,IAAK,SADpB;AAEDP,MAAAA,IAAI,EAAER,MAAM,CAACQ,IAFZ,CAGD;;AAHC,KAAD,CAAJ;AAKH,GA7BE,CAAP;AA8BH,CAtEM","sourcesContent":["import axios from 'axios';\nimport store from '../index'\nimport { apiBaseURL } from '../../../settings';\n\nexport const apiMiddleware = () => (next) => (action) => {\n\n    next(action);\n    const baseUrl = `${apiBaseURL.v1}`;\n\n    const { api, file, successMessage, errorMessage, reducerData } = action.meta || {};\n    const { path, mockPath, method = 'GET', data } = action.payload || {};\n\n    if (!api) {\n        return;\n    }\n\n    if (api && !path) {\n        throw new Error(`'path' not specified for api action ${action.type}`);\n    }\n    const url = mockPath ? mockPath : baseUrl + path;\n\n    const header = {\n        headers: { 'Content-Type': 'multipart/form-data' },\n    }\n\n    let requestObject;\n\n    if (file) {\n        requestObject = {\n            method,\n            url,\n            data,\n            header\n        }\n    } else {\n        requestObject = {\n            method,\n            url,\n            data\n        }\n    }\n    \n    // axios.defaults.headers.common['Authorization'] = `Bearer ${store.getState().authInfo.userInfo.token}`\n\n    return axios(requestObject)\n        .then((res) => {\n            alert(res)\n            next({\n                type: `${action.type}_SUCCESS`,\n                payload: res.data,\n                meta: action.meta,\n            });\n            // successMessage && console.log(successMessage);\n        })\n        .catch((error) => {\n            // console.log(error.response.data)\n\n            // let errorMsg = ''\n\n            // if (error.response) {\n            //     errorMsg = 'Something went wrong'\n            // }\n            // else if (errorMessage) {\n            //     errorMsg = errorMessage;\n            // } else {\n            //     errorMsg = 'Something went wrong'\n            // }\n\n            next({\n                type: `${action.type}_FAILED`,\n                meta: action.meta,\n                // errorMessage: error.response.data\n            });\n        });\n};"]},"metadata":{},"sourceType":"module"}