{"ast":null,"code":"import produce from 'immer';\nimport _ from 'lodash';\nimport * as types from './types';\nconst basicDataState = {};\nexport const basicData = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : basicDataState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload,\n    successMessage,\n    errorMessage,\n    meta\n  } = action;\n  return produce(state, draft => {\n    switch (type) {\n      case types.FETCH_USERS:\n        console.log('fetch user');\n        break;\n\n      case types.FETCH_USERS_SUCCESS:\n        console.log('fetch user success', payload);\n        break;\n\n      case types.FETCH_USERS_FAILED:\n        console.log('fetch user failed', meta);\n        break;\n\n      default:\n        return state;\n    }\n  });\n};","map":{"version":3,"sources":["/home/abir/Documents/personal/djiango-react-mysql-jwt/app/src/common/redux/resources/basicResources/reducer.js"],"names":["produce","_","types","basicDataState","basicData","state","action","type","payload","successMessage","errorMessage","meta","draft","FETCH_USERS","console","log","FETCH_USERS_SUCCESS","FETCH_USERS_FAILED"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AAEA,MAAMC,cAAc,GAAG,EAAvB;AAGA,OAAO,MAAMC,SAAS,GAAG,YAAoC;AAAA,MAAnCC,KAAmC,uEAA3BF,cAA2B;AAAA,MAAXG,MAAW;AACzD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,cAAjB;AAAiCC,IAAAA,YAAjC;AAA+CC,IAAAA;AAA/C,MAAwDL,MAA9D;AACA,SAAON,OAAO,CAACK,KAAD,EAASO,KAAD,IAAW;AAC7B,YAAQL,IAAR;AAEI,WAAKL,KAAK,CAACW,WAAX;AACIC,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA;;AACJ,WAAKb,KAAK,CAACc,mBAAX;AACIF,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCP,OAAlC;AAEA;;AACJ,WAAKN,KAAK,CAACe,kBAAX;AACIH,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCJ,IAAjC;AAEA;;AAGJ;AACI,eAAON,KAAP;AAhBR;AAkBH,GAnBa,CAAd;AAoBH,CAtBM","sourcesContent":["import produce from 'immer';\nimport _ from 'lodash'\nimport * as types from './types';\n\nconst basicDataState = {\n}\n\nexport const basicData = (state = basicDataState, action) => {\n    const { type, payload, successMessage, errorMessage, meta } = action;\n    return produce(state, (draft) => {\n        switch (type) {\n\n            case types.FETCH_USERS:\n                console.log('fetch user')\n                break;\n            case types.FETCH_USERS_SUCCESS:\n                console.log('fetch user success', payload)\n\n                break;\n            case types.FETCH_USERS_FAILED:\n                console.log('fetch user failed', meta)\n\n                break;\n\n\n            default:\n                return state;\n        }\n    });\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}