{"ast":null,"code":"import produce from 'immer';\nimport * as types from './types';\nconst authInfoState = {\n  msg: ''\n};\nexport const authInfo = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : authInfoState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload,\n    errorMessage\n  } = action;\n  return produce(state, draft => {\n    switch (type) {\n      case types.SAVE_USER_INFO:\n        console.log('saving user'); // draft.userInfo = payload.idTokenParsed\n        // draft.userInfo.token = payload.token\n\n        break;\n\n      case types.SAVE_USER_INFO_SUCCESS:\n        console.log(payload);\n        break;\n\n      case types.SAVE_USER_INFO_FAILED:\n        console.log(errorMessage);\n        break;\n\n      default:\n        return state;\n    }\n  });\n};","map":{"version":3,"sources":["/home/abir/Documents/personal/djiango-react-mysql-jwt/app/src/common/redux/resources/authResources/reducer.js"],"names":["produce","types","authInfoState","msg","authInfo","state","action","type","payload","errorMessage","draft","SAVE_USER_INFO","console","log","SAVE_USER_INFO_SUCCESS","SAVE_USER_INFO_FAILED"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAC;AADc,CAAtB;AAIA,OAAO,MAAMC,QAAQ,GAAG,YAAmC;AAAA,MAAlCC,KAAkC,uEAA1BH,aAA0B;AAAA,MAAXI,MAAW;AACvD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAAkCH,MAAxC;AACA,SAAON,OAAO,CAACK,KAAD,EAASK,KAAD,IAAW;AAC7B,YAAQH,IAAR;AACI,WAAKN,KAAK,CAACU,cAAX;AACIC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EADJ,CAEI;AACA;;AACA;;AACJ,WAAKZ,KAAK,CAACa,sBAAX;AACIF,QAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA;;AACJ,WAAKP,KAAK,CAACc,qBAAX;AACIH,QAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;AACA;;AACJ;AACI,eAAOJ,KAAP;AAbR;AAeH,GAhBa,CAAd;AAiBH,CAnBM","sourcesContent":["import produce from 'immer';\nimport * as types from './types';\n\nconst authInfoState = {\n    msg:'',\n}\n\nexport const authInfo = (state = authInfoState, action) => {\n    const { type, payload, errorMessage } = action;\n    return produce(state, (draft) => {\n        switch (type) {\n            case types.SAVE_USER_INFO:\n                console.log('saving user')\n                // draft.userInfo = payload.idTokenParsed\n                // draft.userInfo.token = payload.token\n                break;\n            case types.SAVE_USER_INFO_SUCCESS:\n                console.log(payload)\n                break;\n            case types.SAVE_USER_INFO_FAILED:\n                console.log(errorMessage)\n                break;\n            default:\n                return state;\n        }\n    });\n}"]},"metadata":{},"sourceType":"module"}