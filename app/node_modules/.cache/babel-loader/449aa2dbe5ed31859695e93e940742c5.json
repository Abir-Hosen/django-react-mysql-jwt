{"ast":null,"code":"import produce from 'immer';\nimport _ from 'lodash';\nimport * as types from './types';\nconst basicData = {};\nexport const serverConfig = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : serverConfigState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload,\n    successMessage,\n    errorMessage,\n    meta\n  } = action;\n  return produce(state, draft => {\n    switch (type) {\n      case types.GET_SERVER_PROVIDER:\n        break;\n\n      default:\n        return state;\n    }\n  });\n};\nconst dataStructure = {\n  // from manna vai\n  user: {},\n  role: {},\n  userRole: {},\n  UserProject: {\n    userId: null,\n    projectname: null\n  },\n  serverprovider: {\n    id: null,\n    name: null,\n    logo: null,\n    enable: null\n  },\n  serverprovidersizes: {\n    providerId: null,\n    sizeid: null\n  },\n  serverproviderlocations: {\n    providerId: null,\n    sizeid: null\n  },\n  size: {\n    id: null,\n    ramsize: null,\n    unit: null\n  },\n  location: {\n    id: null,\n    location: null\n  },\n  serverdetail: {\n    providerId: null,\n    size: 'sizeId',\n    location: 'locationid',\n    amount: null\n  },\n  UserProjectsServers: {\n    userid: null,\n    serverdetailId: null,\n    state: ['cart', 'orders', 'paid']\n  }\n};","map":{"version":3,"sources":["/home/abir/Documents/personal/djiango-react-mysql-jwt/app/src/common/redux/resources/serverResources/reducer.js"],"names":["produce","_","types","basicData","serverConfig","state","serverConfigState","action","type","payload","successMessage","errorMessage","meta","draft","GET_SERVER_PROVIDER","dataStructure","user","role","userRole","UserProject","userId","projectname","serverprovider","id","name","logo","enable","serverprovidersizes","providerId","sizeid","serverproviderlocations","size","ramsize","unit","location","serverdetail","amount","UserProjectsServers","userid","serverdetailId"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AAEA,MAAMC,SAAS,GAAG,EAAlB;AAGA,OAAO,MAAMC,YAAY,GAAG,YAAuC;AAAA,MAAtCC,KAAsC,uEAA9BC,iBAA8B;AAAA,MAAXC,MAAW;AAC/D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,cAAjB;AAAiCC,IAAAA,YAAjC;AAA+CC,IAAAA;AAA/C,MAAwDL,MAA9D;AACA,SAAOP,OAAO,CAACK,KAAD,EAASQ,KAAD,IAAW;AAC7B,YAAQL,IAAR;AAEI,WAAKN,KAAK,CAACY,mBAAX;AACI;;AAGJ;AACI,eAAOT,KAAP;AAPR;AASH,GAVa,CAAd;AAWH,CAbM;AAoBP,MAAMU,aAAa,GAAG;AAElB;AACAC,EAAAA,IAAI,EAAE,EAHY;AAIlBC,EAAAA,IAAI,EAAE,EAJY;AAKlBC,EAAAA,QAAQ,EAAE,EALQ;AAMlBC,EAAAA,WAAW,EAAE;AACTC,IAAAA,MAAM,EAAE,IADC;AAETC,IAAAA,WAAW,EAAE;AAFJ,GANK;AAUlBC,EAAAA,cAAc,EAAE;AACZC,IAAAA,EAAE,EAAE,IADQ;AAEZC,IAAAA,IAAI,EAAE,IAFM;AAGZC,IAAAA,IAAI,EAAE,IAHM;AAIZC,IAAAA,MAAM,EAAE;AAJI,GAVE;AAgBlBC,EAAAA,mBAAmB,EAAE;AACjBC,IAAAA,UAAU,EAAE,IADK;AAEjBC,IAAAA,MAAM,EAAE;AAFS,GAhBH;AAoBlBC,EAAAA,uBAAuB,EAAE;AACrBF,IAAAA,UAAU,EAAE,IADS;AAErBC,IAAAA,MAAM,EAAE;AAFa,GApBP;AAwBlBE,EAAAA,IAAI,EAAE;AACFR,IAAAA,EAAE,EAAE,IADF;AAEFS,IAAAA,OAAO,EAAE,IAFP;AAGFC,IAAAA,IAAI,EAAE;AAHJ,GAxBY;AA6BlBC,EAAAA,QAAQ,EAAE;AACNX,IAAAA,EAAE,EAAE,IADE;AAENW,IAAAA,QAAQ,EAAE;AAFJ,GA7BQ;AAiClBC,EAAAA,YAAY,EAAE;AACVP,IAAAA,UAAU,EAAE,IADF;AAEVG,IAAAA,IAAI,EAAE,QAFI;AAGVG,IAAAA,QAAQ,EAAE,YAHA;AAIVE,IAAAA,MAAM,EAAE;AAJE,GAjCI;AAuClBC,EAAAA,mBAAmB,EAAE;AACjBC,IAAAA,MAAM,EAAE,IADS;AAEjBC,IAAAA,cAAc,EAAE,IAFC;AAGjBlC,IAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,MAAnB;AAHU;AAvCH,CAAtB","sourcesContent":["import produce from 'immer';\nimport _ from 'lodash'\nimport * as types from './types';\n\nconst basicData = {\n}\n\nexport const serverConfig = (state = serverConfigState, action) => {\n    const { type, payload, successMessage, errorMessage, meta } = action;\n    return produce(state, (draft) => {\n        switch (type) {\n\n            case types.GET_SERVER_PROVIDER:\n                break;\n            \n\n            default:\n                return state;\n        }\n    });\n}\n\n\n\n\n\n\nconst dataStructure = {\n\n    // from manna vai\n    user: {},\n    role: {},\n    userRole: {},\n    UserProject: {\n        userId: null,\n        projectname: null,\n    },\n    serverprovider: {\n        id: null,\n        name: null,\n        logo: null,\n        enable: null,\n    },\n    serverprovidersizes: {\n        providerId: null,\n        sizeid: null\n    },\n    serverproviderlocations: {\n        providerId: null,\n        sizeid: null,\n    },\n    size: {\n        id: null,\n        ramsize: null,\n        unit: null\n    },\n    location: {\n        id: null,\n        location: null,\n    },\n    serverdetail: {\n        providerId: null,\n        size: 'sizeId',\n        location: 'locationid',\n        amount: null,\n    },\n    UserProjectsServers: {\n        userid: null,\n        serverdetailId: null,\n        state: ['cart', 'orders', 'paid'],\n    }\n}"]},"metadata":{},"sourceType":"module"}